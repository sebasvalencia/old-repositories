[{
    "question": "Which company had the biggest participation in creating Angular?",
    "level": "0",
    "options": [{
        "answer": "Microsoft",
        "isCorrect": false
      },
      {
        "answer": "Yahoo",
        "isCorrect": false
      },
      {
        "answer": "Google",
        "isCorrect": true
      },
      {
        "answer": "Facebook",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "What is Angular?",
    "level": "0",
    "options": [{
        "answer": "A JS library",
        "isCorrect": false
      },
      {
        "answer": "A programing language",
        "isCorrect": false
      },
      {
        "answer": "A framework",
        "isCorrect": true
      },
      {
        "answer": "A magical stone",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Which of the following instructions you should use to create the distribution version of an Angular project?",
    "level": "0",
    "options": [{
        "answer": "ng serve",
        "isCorrect": false
      },
      {
        "answer": "ng publish",
        "isCorrect": false
      },
      {
        "answer": "ng build",
        "isCorrect": true
      },
      {
        "answer": "ng compile",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "What Angular feature let you control the access to a certain route?",
    "level": "0",
    "options": [{
        "answer": "RoutePolice",
        "isCorrect": false
      },
      {
        "answer": "BraveDog",
        "isCorrect": false
      },
      {
        "answer": "Guard",
        "isCorrect": true
      },
      {
        "answer": "Restrictor",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "What CLI command helps you with creating a new Angular project from scratch?",
    "level": "0",
    "options": [{
        "answer": "ng generate",
        "isCorrect": false
      },
      {
        "answer": "ng create",
        "isCorrect": false
      },
      {
        "answer": "ng new",
        "isCorrect": true
      },
      {
        "answer": "ng build",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "How could I pass data between a parent component and its child component?",
    "level": "0",
    "options": [{
        "answer": "Through social services",
        "isCorrect": false
      },
      {
        "answer": "Using WhatsApp",
        "isCorrect": false
      },
      {
        "answer": "Using Inputs and Outputs",
        "isCorrect": true
      },
      {
        "answer": "Using a service",
        "isCorrect": true
      }
    ]
  },
  {
    "question": "Which of the following could be used as dependency managers in Angular CLI?",
    "level": "0",
    "options": [{
        "answer": "Bower",
        "isCorrect": false
      },
      {
        "answer": "NPM",
        "isCorrect": true
      },
      {
        "answer": "Yarn",
        "isCorrect": true
      },
      {
        "answer": "Babel",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "We could define an Angular component as:",
    "level": "0",
    "options": [{
        "answer": "A pretty cool and magical stereo device",
        "isCorrect": false
      },
      {
        "answer": "An HTML file with at least one directive in it",
        "isCorrect": false
      },
      {
        "answer": "A directive with an HTML template",
        "isCorrect": true
      },
      {
        "answer": "An structural directive",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "What is *ngIf in Angular?",
    "level": "0",
    "options": [{
        "answer": "DOM flow directive",
        "isCorrect": false
      },
      {
        "answer": "Attribute directive",
        "isCorrect": false
      },
      {
        "answer": "Structural directive",
        "isCorrect": true
      },
      {
        "answer": "Style directive",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "What is ngStyle in Angular?",
    "level": "0",
    "options": [{
        "answer": "DOM flow directive",
        "isCorrect": false
      },
      {
        "answer": "Attribute directive",
        "isCorrect": true
      },
      {
        "answer": "Structural directive",
        "isCorrect": false
      },
      {
        "answer": "Style directive",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Which of the following expression WON'T create a binding in Angular?",
    "level": "0",
    "options": [{
        "answer": "[value]",
        "isCorrect": false
      },
      {
        "answer": "{{value}}",
        "isCorrect": false
      },
      {
        "answer": "({value})",
        "isCorrect": true
      },
      {
        "answer": "[(value)]",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "What CLI command could I use to create a new component in an Angular project?",
    "level": "0",
    "options": [{
        "answer": "ng gen c",
        "isCorrect": false
      },
      {
        "answer": "ng create c",
        "isCorrect": false
      },
      {
        "answer": "ng g component",
        "isCorrect": true
      },
      {
        "answer": "ng c component",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Which of the following is NOT an Angular Module?",
    "level": "0",
    "options": [{
        "answer": "BrowserModule",
        "isCorrect": false
      },
      {
        "answer": "FormsModule",
        "isCorrect": false
      },
      {
        "answer": "AppComponentModule",
        "isCorrect": true
      },
      {
        "answer": "HttpClientModule",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "It groups multiple Angular elements and it's used to extend and to give structure to an application ",
    "level": "1",
    "options": [{
        "answer": "Component",
        "isCorrect": false
      },
      {
        "answer": "Directive",
        "isCorrect": false
      },
      {
        "answer": "Module",
        "isCorrect": true
      },
      {
        "answer": "Service",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Required module to be able to use ngModel directive",
    "level": "1",
    "options": [{
        "answer": "ReactiveFormsModule",
        "isCorrect": false
      },
      {
        "answer": "RouteModule",
        "isCorrect": false
      },
      {
        "answer": "FormsModule",
        "isCorrect": true
      },
      {
        "answer": "NgModelModule",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "TypeScript artifact used to define a custom data type",
    "level": "2",
    "options": [{
        "answer": "Constant",
        "isCorrect": false
      },
      {
        "answer": "Dragon balls",
        "isCorrect": false
      },
      {
        "answer": "Interface",
        "isCorrect": true
      },
      {
        "answer": "Readonly variable",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "Which of the following ISN'T a native TypeScript data type?",
    "level": "1",
    "options": [{
        "answer": "Tuple",
        "isCorrect": false
      },
      {
        "answer": "Number",
        "isCorrect": false
      },
      {
        "answer": "Int",
        "isCorrect": true
      },
      {
        "answer": "String",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "What company is responsible to maintain and evolve TypeScript?",
    "level": "0",
    "options": [{
        "answer": "Google",
        "isCorrect": false
      },
      {
        "answer": "Yahoo",
        "isCorrect": false
      },
      {
        "answer": "Microsoft",
        "isCorrect": true
      },
      {
        "answer": "Amazon",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "What is the name given to words preceded by an @ in TypeScript?",
    "level": "1",
    "options": [{
        "answer": "Ilustrator",
        "isCorrect": false
      },
      {
        "answer": "Injector",
        "isCorrect": false
      },
      {
        "answer": "Decorator",
        "isCorrect": true
      },
      {
        "answer": "At-ator",
        "isCorrect": false
      }
    ]
  },
  {
    "question": "In what component's method should we inject a service to make it available throughout the component? ",
    "level": "0",
    "options": [{
        "answer": "ngOnInit",
        "isCorrect": false
      },
      {
        "answer": "ngDoCheck",
        "isCorrect": false
      },
      {
        "answer": "constructor",
        "isCorrect": true
      },
      {
        "answer": "ngOnChanges",
        "isCorrect": false
      }
    ]
  }
]